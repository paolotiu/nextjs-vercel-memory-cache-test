import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { createSSGHelpers } from '@trpc/react/ssg';
import superjson from 'superjson';

import { trpc } from '../utils/trpc';
import { appRouter } from '../server/router';

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const ssg = createSSGHelpers({
    ctx: {} as any,
    router: appRouter,
    transformer: superjson,
  });

  await ssg.prefetchQuery('example.hello');
  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
  };
};

const Home: NextPage = () => {
  const hello = trpc.useQuery(['example.hello']);
  const { mutate: purge } = trpc.useMutation(['example.purge']);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        {hello.isLoading ? (
          <h3 className="text-3xl">LOADING...</h3>
        ) : (
          <>
            <h3 className="text-3xl font-medium">CACHED: {hello.data?.cached ? 'YES' : 'NO'}</h3>
            <p className="text-lg">Message: {hello.data?.message}</p>
          </>
        )}

        <button
          className="p-2 rounded bg-black text-white font-medium mt-4 hover:bg-gray-900"
          onClick={() => purge()}
        >
          Purge Cache
        </button>
      </main>
    </>
  );
};

export default Home;
